(* Make two classes for trapezoid and parallelogram and write a code to calculate their areas.
ii.
Also write a comparison class to see which shape has the largest area, store results in a dictionary, iterate for different dimensions and use dictionary functions to search the shapes with largest areas. *)




# Define a class for Trapezoid
class Trapezoid:
    def __init__(self, base1, base2, height):
        self.base1 = base1
        self.base2 = base2
        self.height = height
    
    def area(self):
        return 0.5 * (self.base1 + self.base2) * self.height


# Define a class for Parallelogram
class Parallelogram:
    def __init__(self, base, height):
        self.base = base
        self.height = height
    
    def area(self):
        return self.base * self.height


# Define a class to compare areas
class ShapeComparison:
    def __init__(self):
        self.results = {}  # Dictionary to store areas
    
    def add_shape(self, name, area):
        self.results[name] = area  # Store shape name and area
    
    def largest_area(self):
        return max(self.results, key=self.results.get)  # Find shape with max area
    
    def show_results(self):
        for name, area in self.results.items():
            print(f"{name}: {area}")


# Create an object for comparison
shape_comp = ShapeComparison()

# Define shape dimensions
trapezoid1 = Trapezoid(10, 15, 5)
parallelogram1 = Parallelogram(12, 8)

trapezoid2 = Trapezoid(20, 25, 10)
parallelogram2 = Parallelogram(18, 9)

# Calculate and store areas
shape_comp.add_shape("Trapezoid 1", trapezoid1.area())
shape_comp.add_shape("Parallelogram 1", parallelogram1.area())
shape_comp.add_shape("Trapezoid 2", trapezoid2.area())
shape_comp.add_shape("Parallelogram 2", parallelogram2.area())

# Display results
shape_comp.show_results()

# Find and print the shape with the largest area
largest = shape_comp.largest_area()
print(f"\nThe shape with the largest area is {largest} with area {shape_comp.results[largest]}")
